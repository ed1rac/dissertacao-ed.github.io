
@article{xu_mining_2014,
	title = {Mining Attribute-based Access Control Policies},
	url = {http://arxiv.org/abs/1306.2401},
	abstract = {Attribute-based access control ({ABAC}) provides a high level of flexibility that promotes security and information sharing. {ABAC} policy mining algorithms have potential to significantly reduce the cost of migration to {ABAC}, by partially automating the development of an {ABAC} policy from an access control list ({ACL}) policy or role-based access control ({RBAC}) policy with accompanying attribute data. This paper presents an {ABAC} policy mining algorithm. To the best of our knowledge, it is the first {ABAC} policy mining algorithm. Our algorithm iterates over tuples in the given user-permission relation, uses selected tuples as seeds for constructing candidate rules, and attempts to generalize each candidate rule to cover additional tuples in the user-permission relation by replacing conjuncts in attribute expressions with constraints. Our algorithm attempts to improve the policy by merging and simplifying candidate rules, and then it selects the highest-quality candidate rules for inclusion in the generated policy.},
	journaltitle = {{arXiv}:1306.2401 [cs]},
	author = {Xu, Zhongyuan and Stoller, Scott D.},
	urldate = {2020-08-12},
	date = {2014-08-07},
	eprinttype = {arxiv},
	eprint = {1306.2401},
	keywords = {Computer Science - Cryptography and Security},
	file = {arXiv Fulltext PDF:C\:\\Users\\Ed\\Zotero\\storage\\3YCB2S9D\\Xu e Stoller - 2014 - Mining Attribute-based Access Control Policies.pdf:application/pdf;arXiv.org Snapshot:C\:\\Users\\Ed\\Zotero\\storage\\F45E2D78\\1306.html:text/html}
}

@inproceedings{xu_mining_2013,
	title = {Mining attribute-based access control policies from {RBAC} policies},
	doi = {10.1109/CEWIT.2013.6713753},
	abstract = {Role-based access control ({RBAC}) is very widely used but has notable limitations, prompting a shift towards attribute-based access control ({ABAC}). However, the cost of developing an {ABAC} policy can be a significant obstacle to migration from {RBAC} to {ABAC}. This paper presents the first formal definition of the problem of mining {ABAC} policies from {RBAC} policies and attribute data, and the first algorithm specifically designed to mine an {ABAC} policy from an {RBAC} policy and attribute data.},
	eventtitle = {2013 10th International Conference and Expo on Emerging Technologies for a Smarter World ({CEWIT})},
	pages = {1--6},
	booktitle = {2013 10th International Conference and Expo on Emerging Technologies for a Smarter World ({CEWIT})},
	author = {Xu, Zhongyuan and Stoller, Scott D.},
	date = {2013-10},
	keywords = {{ABAC} policies, Access control, Algorithm design and analysis, attribute data, attribute-based access control, attribute-based access control policy mining, authorisation, data mining, Data mining, Educational institutions, Gold, Merging, {RBAC} policies, role mining, role-based access control, Semantics},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Ed\\Zotero\\storage\\92QV9345\\6713753.html:text/html;Xu e Stoller - 2013 - Mining attribute-based access control policies fro.pdf:C\:\\Users\\Ed\\Zotero\\storage\\J5RP3KTD\\Xu e Stoller - 2013 - Mining attribute-based access control policies fro.pdf:application/pdf}
}

@article{hachana_mining_2015,
	title = {Mining a high level access control policy in a network with multiple firewalls},
	volume = {20},
	issn = {2214-2126},
	url = {http://www.sciencedirect.com/science/article/pii/S221421261400146X},
	doi = {10.1016/j.jisa.2014.10.010},
	series = {Security, Privacy and Trust in Future Networks and Mobile Computing},
	abstract = {A policy mining approach that aims to automatically extract a high level of abstraction policy from the rules configured on a firewall has been recently proposed (Hachana et al., 2013). This technique is likely to considerably facilitate firewall management. However, protecting the information system of a business organization usually requires the enforcement of more than one firewall. In this paper, we augment the policy mining approach by an additional processing for a network access control policy mining. We develop the problem of integration of Net-{RBAC} (Hachana, 2014) policies resulting from policy mining over several firewalls in order to mine a high level network policy. Moreover, we show how to verify security properties related to the deployment consistency over the firewalls. We illustrate the network policy mining approach by a realistic example, and we experimentally evaluate the performance of our merger algorithms.},
	pages = {61--73},
	journaltitle = {Journal of Information Security and Applications},
	author = {Hachana, Safaà and Cuppens-Boulahia, Nora and Cuppens, Frédéric},
	urldate = {2020-08-19},
	date = {2015-02-01},
	langid = {english},
	keywords = {Access control, Multiple firewalls, Net-{RBAC}, Network security, Policy mining, Role mining},
	file = {Hachana et al. - 2015 - Mining a high level access control policy in a net.pdf:C\:\\Users\\Ed\\Zotero\\storage\\4CLDQMRM\\Hachana et al. - 2015 - Mining a high level access control policy in a net.pdf:application/pdf;ScienceDirect Snapshot:C\:\\Users\\Ed\\Zotero\\storage\\CNB3DFPH\\S221421261400146X.html:text/html}
}

@article{bui_greedy_2019,
	title = {Greedy and evolutionary algorithms for mining relationship-based access control policies},
	volume = {80},
	issn = {0167-4048},
	url = {http://www.sciencedirect.com/science/article/pii/S0167404818304565},
	doi = {10.1016/j.cose.2018.09.011},
	abstract = {Relationship-based access control ({ReBAC}) provides a high level of expressiveness and flexibility that promotes security and information sharing. We formulate {ReBAC} as an object-oriented extension of attribute-based access control ({ABAC}) in which relationships are expressed using fields that refer to other objects, and path expressions are used to follow chains of relationships between objects. {ReBAC} policy mining algorithms have potential to significantly reduce the cost of migration from legacy access control systems to {ReBAC}, by partially automating the development of a {ReBAC} policy from an existing access control policy and attribute data. This paper presents two algorithms for mining {ReBAC} policies from access control lists ({ACLs}) and attribute data represented as an object model: a greedy algorithm guided by heuristics, and a grammar-based evolutionary algorithm. An evaluation of the algorithms on four sample policies and two large case studies demonstrates their effectiveness.},
	pages = {317--333},
	journaltitle = {Computers \& Security},
	author = {Bui, Thang and Stoller, Scott D. and Li, Jiajie},
	urldate = {2021-01-13},
	date = {2019-01-01},
	langid = {english},
	keywords = {Access control policy development, Access control policy mining, Attribute-based access control, Evolutionary algorithms, Relationship-based access control},
	file = {ScienceDirect Snapshot:C\:\\Users\\Ed\\Zotero\\storage\\8PQUKCG5\\S0167404818304565.html:text/html;Versão submetida:C\:\\Users\\Ed\\Zotero\\storage\\IIC296IX\\Bui et al. - 2019 - Greedy and evolutionary algorithms for mining rela.pdf:application/pdf}
}

@inproceedings{hwang_acpt_2010,
	title = {{ACPT}: A Tool for Modeling and Verifying Access Control Policies},
	doi = {10.1109/POLICY.2010.22},
	shorttitle = {{ACPT}},
	abstract = {Access control mechanisms are a widely adopted technology for information security. Since access decisions (i.e., permit or deny) on requests are dependent on access control policies, ensuring the correct modeling and implementation of access control policies is crucial for adopting access control mechanisms. To address this issue, we develop a tool, called {ACPT} (Access Control Policy Testing), that helps to model and implement policies correctly during policy modeling, implementation, and verification.},
	eventtitle = {2010 {IEEE} International Symposium on Policies for Distributed Systems and Networks},
	pages = {40--43},
	booktitle = {2010 {IEEE} International Symposium on Policies for Distributed Systems and Networks},
	author = {Hwang, J. and Xie, T. and Hu, V. and Altunay, M.},
	date = {2010-07},
	keywords = {Access control, Access Control Policies, access control policy modeling, Access Control Policy Testing, access control policy verification, access decision, authorisation, Computational modeling, formal specification, formal verification, Graphical user interfaces, Heuristic algorithms, information security, {NIST}, policy implementation, Policy Modeling, Policy Testing, Policy Verification, Testing},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Ed\\Zotero\\storage\\9YPSJIMS\\5629938.html:text/html}
}

@inproceedings{kalaskar_fp-growth_2018,
	title = {{FP}-Growth Policy Mining for Access Control Policies},
	doi = {10.1109/ICCUBEA.2018.8697508},
	abstract = {In this paper we propose a technique known as {FP}-growth algorithm to mining association rules. {FP}(Frequent Pattern) growth algorithm propose compressed information needed to frequent item set in {FP}-tree and {FP}-tree are finds all frequent item. The idea of Attribute Based Access Control has existed for decades. It represents a point inside the area of logical access manage that incorporates access control records, role based totally get right of entry to manage, and the {ABAC} approach for giving get right of entry to based on the evaluation of attributes. It gives a excessive level of adaptability that provide safety and information sharing. algorithms have an ability to reduce the cost of migration to {ABAC}, by in part automating the improvement of an {ABAC} coverage from an access control list policy or role-based access control policy with accompanying characteristic records. Paper shows {ABAC} policy mining algorithm. this algorithm iterates over tuples and in user permission relation makes use of selected tuples uses as seeds for developing candidate guidelines, and endeavors to generalize every candidate rule for covering extra tuples within the consumer permission relation by changing conjuncts in characteristic expressions with constraints. The experimental end result suggests that the proposed gadget better in performance than the existing system.},
	eventtitle = {2018 Fourth International Conference on Computing Communication Control and Automation ({ICCUBEA})},
	pages = {1--4},
	booktitle = {2018 Fourth International Conference on Computing Communication Control and Automation ({ICCUBEA})},
	author = {Kalaskar, A. and Barkade, V.},
	date = {2018-08},
	keywords = {{ABAC} approach, {ABAC} coverage, {ABAC} policy mining algorithm, Access control, access control list policy, access control policies, access control records, attribute based access control, authorisation, candidates rule generation, characteristic records, Companies, data mining, Data mining, {FP}- Growth algorithm, {FP}-growth algorithm, {FP}-growth policy mining, {FP}-tree, frequent item, frequent pattern, Guidelines, logical access, Memory management, mining association rules, role based access control, Rule mining, Tools, tuples},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Ed\\Zotero\\storage\\PWV76DIF\\8697508.html:text/html}
}

@inproceedings{martin_inferring_2006,
	title = {Inferring access-control policy properties via machine learning},
	doi = {10.1109/POLICY.2006.19},
	abstract = {To ease the burden of implementing and maintaining access-control aspects in a system, a growing trend among developers is to write access-control policies in a specification language such as {XACML} and integrate the policies with applications through the use of a policy decision point ({PDP}). To assure that the specified polices reflect the expected ones, recent research has developed policy verification tools; however, their applications in practice are still limited, being constrained by the limited set of supported policy language features and the unavailability of policy properties. This paper presents a data-mining approach to the problem of verifying that expressed access-control policies reflect the true desires of the policy author. We developed a tool to investigate this approach by automatically generating requests, evaluating those requests to get responses, and applying machine learning on the request-response pairs to infer policy properties. These inferred properties facilitate the inspection of the policy behavior. We applied our tool on an access-control policy of a central grades repository system for a university. Our results show that machine learning algorithms can provide valuable insight into basic policy properties and help identify specific bug-exposing requests},
	eventtitle = {Seventh {IEEE} International Workshop on Policies for Distributed Systems and Networks ({POLICY}'06)},
	pages = {4 pp.--238},
	booktitle = {Seventh {IEEE} International Workshop on Policies for Distributed Systems and Networks ({POLICY}'06)},
	author = {Martin, E. and {Tao Xie}},
	date = {2006-06},
	keywords = {access-control policy properties, Application software, authorisation, central grades repository system, Computer science, Conferences, data mining, inference mechanisms, Inspection, learning (artificial intelligence), machine learning, Machine learning, Machine learning algorithms, Natural languages, policy behavior, policy decision point, policy language, policy property inferring, policy verification, program verification, specification language, Specification languages},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Ed\\Zotero\\storage\\IGJ38E55\\1631178.html:text/html}
}

@inproceedings{chakraborty_feasibility_2019,
	title = {On the Feasibility of Attribute-Based Access Control Policy Mining},
	doi = {10.1109/IRI.2019.00047},
	abstract = {As the technology of attribute-based access control ({ABAC}) matures and begins to supplant earlier models such as role-based or discretionary access control, it becomes necessary to convert from already deployed access control systems to {ABAC}. Several variations of this general problem can be defined, some of which have been studied by researchers. In particular the {ABAC} policy mining problem assumes that attribute values for various entities such as users and objects in the system are given, in addition to the authorization state, from which the {ABAC} policy needs to be discovered. In this paper, we formalize the {ABAC} {RuleSet} Existence problem in this context and develop an algorithm and complexity analysis for its solution. We further introduce the notion of {ABAC} {RuleSet} Infeasibility Correction along with an algorithm for its solution.},
	eventtitle = {2019 {IEEE} 20th International Conference on Information Reuse and Integration for Data Science ({IRI})},
	pages = {245--252},
	booktitle = {2019 {IEEE} 20th International Conference on Information Reuse and Integration for Data Science ({IRI})},
	author = {Chakraborty, S. and Sandhu, R. and Krishnan, R.},
	date = {2019-07},
	keywords = {{ABAC} policy mining problem, {ABAC} ruleset existence problem, {ABAC} ruleset infeasibility correction, Access Control, Attribute-Based Access Control, {ABAC} Policy Mining, {ABAC} Rule Existence Problem, Policy Mining, attribute values, attribute-based access control policy mining, authorisation, Authorization, authorization state, Computational modeling, Conferences, data mining, Data mining, Data science, deployed access control systems, discretionary access control, Inspection, role-based access control},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Ed\\Zotero\\storage\\8JBYZZ35\\8843480.html:text/html}
}